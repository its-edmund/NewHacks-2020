{"version":3,"sources":["components/Workspace/Workspace.js","components/CodeWindow/CodeWindow.js","components/BlocksTray/BlocksMenu.js","App.js","index.js"],"names":["Workspace","props","definitions","id","name","definition","Message","style","height","Header","as","result","find","obj","console","log","title","renderTitle","display","renderDefinition","java","code","python","cpp","renderItem","language","CodeWindow","languages","menuItem","render","Tab","Pane","toString","split","map","i","key","includes","panes","BlocksMenu","categories","class","value","onClick","handleClick","App","useState","element","setElement","Container","margin","Grid","Column","textAlign","columns","rows","Row","stretched","e","target","attached","Button","ReactDOM","StrictMode","document","getElementById"],"mappings":"qOAgDeA,EA7CG,SAACC,GACf,IAAMC,EAAc,CAEhB,CAAEC,GAAI,IAAKC,KAAM,UAAWC,WAAY,4MACxC,CAAEF,GAAI,IAAKC,KAAM,SAAUC,WAAY,uQACvC,CAAEF,GAAI,IAAKC,KAAM,UAAWC,WAAY,4NACxC,CAAEF,GAAI,IAAKC,KAAM,YAAaC,WAAY,0PAC1C,CAAEF,GAAI,IAAKC,KAAM,SAAUC,WAAY,0NAEvC,CAAEF,GAAI,IAAKC,KAAM,KAAMC,WAAY,mRACnC,CAAEF,GAAI,IAAKC,KAAM,UAAWC,WAAY,sSACxC,CAAEF,GAAI,IAAKC,KAAM,OAAQC,WAAY,yPACrC,CAAEF,GAAI,IAAKC,KAAM,SAAUC,WAAY,iOAEvC,CAAEF,GAAI,IAAKC,KAAM,QAASC,WAAY,gQACtC,CAAEF,GAAI,KAAMC,KAAM,MAAOC,WAAY,6LACrC,CAAEF,GAAI,KAAMC,KAAM,QAASC,WAAY,yDACvC,CAAEF,GAAI,KAAMC,KAAM,QAASC,WAAY,yKAiB3C,OACI,8BACI,eAACC,EAAA,EAAD,CAASC,MAAO,CAAEC,OAAQ,KAA1B,UACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,SAjBQ,SAACP,GACjB,IAAMQ,EAAST,EAAYU,MAAK,SAAAC,GAAG,OAAIA,EAAIV,KAAOA,KAGlD,OAFAW,QAAQC,IAAR,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAQK,OAEpB,OAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAQP,KAaUa,CAAYhB,EAAMiB,WACnC,uBACA,cAACT,EAAA,EAAD,CAAQC,GAAG,KAAX,SAZa,SAACP,GACtB,IAAMQ,EAAST,EAAYU,MAAK,SAAAC,GAAG,OAAIA,EAAIV,KAAOA,KAGlD,OAFAW,QAAQC,IAAR,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAQK,OAEpB,OAAOL,QAAP,IAAOA,OAAP,EAAOA,EAAQN,WAQUc,CAAiBlB,EAAMiB,iB,SCvClDE,EAAO,CACT,CAAEjB,GAAI,IAAKkB,KAAM,wBACjB,CAAElB,GAAI,IAAKkB,KAAM,wBACjB,CAAElB,GAAI,IAAKkB,KAAM,4BACjB,CAAElB,GAAI,IAAKkB,KAAM,qBACjB,CAAElB,GAAI,IAAKkB,KAAM,yCACjB,CAAElB,GAAI,IAAKkB,KAAM,gDACjB,CAAElB,GAAI,IAAKkB,KAAM,gGACjB,CAAElB,GAAI,IAAKkB,KAAM,kIACjB,CAAElB,GAAI,IAAKkB,KAAM,0HACjB,CAAElB,GAAI,IAAKkB,KAAM,gEACjB,CAAElB,GAAI,KAAMkB,KAAM,2FAClB,CAAElB,GAAI,KAAMkB,KAAM,iDAClB,CAAElB,GAAI,KAAMkB,KAAM,6EAGhBC,EAAS,CACX,CAAEnB,GAAI,IAAKkB,KAAM,mBACjB,CAAElB,GAAI,IAAKkB,KAAM,gBACjB,CAAElB,GAAI,IAAKkB,KAAM,sBACjB,CAAElB,GAAI,IAAKkB,KAAM,eACjB,CAAElB,GAAI,IAAKkB,KAAM,iCACjB,CAAElB,GAAI,IAAKkB,KAAM,2CACjB,CAAElB,GAAI,IAAKkB,KAAM,mFACjB,CAAElB,GAAI,IAAKkB,KAAM,kHACjB,CAAElB,GAAI,IAAKkB,KAAM,8GACjB,CAAElB,GAAI,IAAKkB,KAAM,2DACjB,CAAElB,GAAI,KAAMkB,KAAM,kEAClB,CAAElB,GAAI,KAAMkB,KAAM,oCAClB,CAAElB,GAAI,KAAMkB,KAAM,2BAGhBE,EAAM,CACR,CAAEpB,GAAI,IAAKkB,KAAM,wBACjB,CAAElB,GAAI,IAAKkB,KAAM,wBACjB,CAAElB,GAAI,IAAKkB,KAAM,4BACjB,CAAElB,GAAI,IAAKkB,KAAM,qBACjB,CAAElB,GAAI,IAAKkB,KAAM,yCACjB,CAAElB,GAAI,IAAKkB,KAAM,iDACjB,CAAElB,GAAI,IAAKkB,KAAM,iGACjB,CAAElB,GAAI,IAAKkB,KAAM,kIACjB,CAAElB,GAAI,IAAKkB,KAAM,0HACjB,CAAElB,GAAI,IAAKkB,KAAM,gEACjB,CAAElB,GAAI,KAAMkB,KAAM,2FAClB,CAAElB,GAAI,KAAMkB,KAAM,sCAClB,CAAElB,GAAI,KAAMkB,KAAM,uBAEhBG,EAAa,SAACC,EAAUtB,GAC1BW,QAAQC,IAAIZ,GACZ,IAAMQ,EAASc,EAASb,MAAK,SAAAC,GAAG,OAAIA,EAAIV,KAAOA,KAG/C,OAFAW,QAAQC,IAAR,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAQU,MAEpB,OAAOV,QAAP,IAAOA,OAAP,EAAOA,EAAQU,MA6CJK,EAxCI,SAACzB,GAChB,IAAM0B,EAAY,CACd,CACIC,SAAU,OAAQC,OAAQ,kBAAM,cAACC,EAAA,EAAIC,KAAL,CAAUxB,MAAO,CAAEC,OAAQ,KAA3B,SAC3BgB,EAAWJ,EAAMnB,EAAMiB,QAAQc,YAAYC,MAAM,MAAMC,KAAI,SAACC,EAAGC,GAC5D,OAAID,EAAEE,SAAS,MACJ,yCAAsBF,IAAZC,GAEd,8BAAgBD,GAANC,UAI7B,CACIR,SAAU,MAAOC,OAAQ,kBAAM,cAACC,EAAA,EAAIC,KAAL,CAAUxB,MAAO,CAAEC,OAAQ,KAA3B,SAC1BgB,EAAWD,EAAKtB,EAAMiB,QAAQc,YAAYC,MAAM,MAAMC,KAAI,SAACC,EAAGC,GAC3D,OAAID,EAAEE,SAAS,MACJ,yCAAsBF,IAAZC,GAEd,8BAAgBD,GAANC,UAI7B,CACIR,SAAU,SAAUC,OAAQ,kBAAM,cAACC,EAAA,EAAIC,KAAL,CAAUxB,MAAO,CAAEC,OAAQ,KAA3B,SAC7BgB,EAAWF,EAAQrB,EAAMiB,QAAQc,YAAYC,MAAM,MAAMC,KAAI,SAACC,EAAGC,GAC9D,OAAID,EAAEE,SAAS,MACJ,yCAAsBF,IAAZC,GAEd,8BAAgBD,GAANC,WAKjC,OACI,8BACI,cAACN,EAAA,EAAD,CAAKQ,MAAOX,OCvDTY,EArCI,SAACtC,GAClB,IAAMuC,EAAa,CACjB,CACEZ,SAAU,YAAaC,OAAQ,kBAAM,sBAAKY,MAAM,wBAAX,UACnC,wBAAQA,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,qBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,oBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,qBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,uBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,yBAGJ,CACEhB,SAAU,eAAgBC,OAAQ,kBAAM,sBAAKY,MAAM,wBAAX,UACtC,wBAAQA,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,gBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,qBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,kBACA,wBAAQH,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,yBAGJ,CACEhB,SAAU,QAASC,OAAQ,kBAAM,sBAAKY,MAAM,uBAAX,UAC/B,wBAAQA,MAAM,YAAYC,MAAO,EAAGC,QAAS1C,EAAM2C,YAAnD,mBACA,wBAAQH,MAAM,YAAYC,MAAO,GAAIC,QAAS1C,EAAM2C,YAApD,sBAGJ,CACEhB,SAAU,UAAWC,OAAQ,kBAAM,sBAAKY,MAAM,uBAAX,UACjC,wBAAQA,MAAM,YAAYC,MAAO,GAAIC,QAAS1C,EAAM2C,YAApD,mBACA,wBAAQH,MAAM,YAAYC,MAAO,GAAIC,QAAS1C,EAAM2C,YAApD,yBAIN,OACE,cAACd,EAAA,EAAD,CAAKQ,MAAOE,KC0CDK,MAtEf,WAAgB,IAAD,EACiBC,mBAAS,KAD1B,mBACNC,EADM,KACGC,EADH,KAOb,OACE,eAACC,EAAA,EAAD,CAAW1C,MAAO,CAAE2C,OAAQ,IAA5B,UACE,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,OAAN,CAAaC,UAAU,SAAvB,SACE,cAAC5C,EAAA,EAAD,CAAQC,GAAG,KAAX,6BA0BJ,eAACyC,EAAA,EAAD,CAAMG,QAAS,EAAGC,KAAK,QAAQF,UAAU,OAAzC,UACE,eAACF,EAAA,EAAKK,IAAN,CAAUC,WAAS,EAAnB,UAEE,eAACN,EAAA,EAAKC,OAAN,CAAaK,WAAS,EAAtB,UAEE,cAAC,EAAD,CAAYb,YAvCC,SAACc,GACtBV,EAAWU,EAAEC,OAAOjB,UAuCZ,cAAC,EAAD,CAAWkB,UAAQ,EAAC1C,QAAS6B,OAI/B,cAACI,EAAA,EAAKC,OAAN,CAAaK,WAAS,EAAtB,SACE,cAAC,EAAD,CAAYvC,QAAS6B,SAKzB,eAACI,EAAA,EAAKK,IAAN,CAAUC,WAAS,EAAnB,UAEE,cAACN,EAAA,EAAKC,OAAN,CAAaK,WAAS,EAAtB,SACE,cAACI,EAAA,EAAD,wBAGF,cAACV,EAAA,EAAKC,OAAN,CAAaK,WAAS,EAAtB,SACE,cAACI,EAAA,EAAD,mC,OC/DZC,IAASjC,OACP,cAAC,IAAMkC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.77f8feb3.chunk.js","sourcesContent":["import React from 'react';\nimport { Message, Button, Header } from 'semantic-ui-react'\n\nconst Workspace = (props) => {\n    const definitions = [\n\n        { id: '0', name: \"Integer\", definition: \"An integer is a whole number, meaning it cannot be a decimal. However, it can be a negative number, or zero. Integers are good for counting things, like the number of glasses of water you drank today.\" },\n        { id: '1', name: \"Double\", definition: \"A double is any number that has a decimal point. An integer can be written as a double by simply adding a \\\".0\\\" . Since doubles have a decimal point, they require more computer memory than an integer. Doubles are good for data with decimal values, like prices.\" },\n        { id: '2', name: \"Boolean\", definition: \"A boolean is a value of TRUE or FALSE. Comparison operators such as > (greater than), < (less than), == (equal to) && (and), || (or), and ~ (not) will give a boolean value. Booleans are usually used in if statements.\" },\n        { id: '3', name: \"Character\", definition: \"A character is a single letter or symbol. This can include single digits like 1 or 3, but they are not treated as numbers. A character is written with single quotes (' '). Each character is stored as a pre-determined number called an ASCII value.\" },\n        { id: '4', name: \"String\", definition: \"A string is a bunch of characters. It is usually used to represent words or phrases. Since strings contain letters and numbers, they are useful for storing text data, like a message you want to print to the screen.\" },\n\n        { id: '5', name: \"if\", definition: \"An if statement is a conditional that will run a section of code when a condition is met, usually a boolean. If the condition is not met, no code in the if statement will run. If statements are useful for changing the flow of the code so certain parts only run sometimes.\" },\n        { id: '6', name: \"if else\", definition: \"If else statements follow an if statement. If the if statement's conditon is not met, then the following if else condition will be checked. You can have multiple if else statements under an if statement to check multiple conditions, or none at all if you are only checking the if condition.\" },\n        { id: '7', name: \"else\", definition: \"Else is the last statement in an if statement. If no other conditions in the if statement are met, then the code in the else statement is run. The else acts as a \\\"catch all\\\"}, but like the if else, it is optional to include with an if statement.\" },\n        { id: '8', name: \"switch\", definition: \"A switch statement is an easier way to write if and if else. The switch compares a variable with multiple cases, and runs code for each case. Switch cases are handy when you know exactly what you are comparing a variable.\" },\n\n        { id: '9', name: \"while\", definition: \"A while loop repeats code until a certain condition is met. Like conditionals, this terminating condition is usually a boolean. Inside a while loop, there must be code that steps toward the terminating condition, otherwise the loop will run infinitely.\" },\n        { id: '10', name: \"for\", definition: \"A for loop repeats code a set amount of times, based on a range of numbers. You would use a for loop over a while loop when you know exactly how many times you want your code to repeat.\" },\n        { id: '11', name: \"Print\", definition: \"Print is a function that displays text to the screen.\" },\n        { id: '12', name: \"Input\", definition: \"Getting an input is a function in where you assign text to a variable. When you type something onto the screen and press enter, this is an example of a basic input.\" },\n    ];\n\n    const renderTitle = (id) => {\n        const result = definitions.find(obj => obj.id === id);\n        console.log(result?.title)\n\n        return result?.name;\n    }\n\n    const renderDefinition = (id) => {\n        const result = definitions.find(obj => obj.id === id);\n        console.log(result?.title)\n\n        return result?.definition;\n    }\n\n    return (\n        <div>\n            <Message style={{ height: 400 }}>\n                <Header as='h3'>{renderTitle(props.display)}</Header>\n                <br />\n                <Header as='h5'>{renderDefinition(props.display)}</Header>\n            </Message>\n        </div>\n    )\n}\n\nexport default Workspace;","import React from 'react';\nimport { Message, Tab } from 'semantic-ui-react'\n\nconst java = [\n    { id: '0', code: \"int cupsOfWater = 9;\" },\n    { id: '1', code: \"double price = 3.99;\" },\n    { id: '2', code: \"bool monkeyHappy = true;\" },\n    { id: '3', code: \"char grade = 'A';\" },\n    { id: '4', code: \"String address = \\\"123 Sesame Street\\\";\" },\n    { id: '5', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n}\" },\n    { id: '6', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n} else if (bananas > 3) {\\n\\tmonkeyEat = true;\\n}\" },\n    { id: '7', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n} else if (bananas > 3) {\\n\\tmonkeyEat = true;\\n} else {\\n\\tmonkeyHappy = false;\\n}\" },\n    { id: '8', code: \"switch (bananas) {\\n\\tcase 0:\\n\\t\\tmonkeyHappy = false;\\n\\t\\tbreak;\\n\\tcase 1:\\n\\t\\tmonkeyHappy = true;\\n\\t\\tbreak;\\n}\" },\n    { id: '9', code: \"while (monkeyHappy) {\\n\\tbananasEaten = bananasEaten + 1;\\n}\" },\n    { id: '10', code: \"for (int monkeys = 10; monkeys > 0; monkeys--) {\\n\\tbananasTaken = bananasTaken + 1;\\n}\" },\n    { id: '11', code: \"System.out.println(\\\"Ooh Ooh Eee Eee Ahh Ahh\\\")\" },\n    { id: '12', code: \"Scanner in = new Scanner(System.in);\\nString monkeyCall = in.nextLine();\" },\n]\n\nconst python = [\n    { id: '0', code: \"cupsOfWater = 9\" },\n    { id: '1', code: \"price = 3.99\" },\n    { id: '2', code: \"monkeyHappy = True\" },\n    { id: '3', code: \"grade = \\\"A\\\"\" },\n    { id: '4', code: \"address = \\\"123 Sesame Street\\\"\" },\n    { id: '5', code: \"if bananas > 5:\\n\\tmonkeyHappy = True\\n\" },\n    { id: '6', code: \"if bananas > 5:\\n\\tmonkeyHappy = True\\n elif bananas > 3:\\n\\tmonkeyEat = True\\n\" },\n    { id: '7', code: \"if bananas > 5:\\n\\tmonkeyHappy = True\\n elif bananas > 3:\\n\\tmonkeyEat = True\\nelse \\n\\tmonkeyHappy = False\\n}\" },\n    { id: '8', code: \"def zero():\\n\\tmonkeyHappy = False\\ndef one():\\n\\tmonkeyHappy = True;\\noptions = {0 : zero,\\n\\t1 : one,\\n}\" },\n    { id: '9', code: \"while monkeyHappy:\\n\\tbananasEaten = bananasEaten + 1\\n\" },\n    { id: '10', code: \"for i in range(10,-1,-1):\\n\\tbananasTaken = bananasTaken + 1\\n\" },\n    { id: '11', code: \"print(\\\"Ooh Ooh Eee Eee Ahh Ahh\\\")\" },\n    { id: '12', code: \"monkeyCall = input(\\\"\\\")\" },\n]\n\nconst cpp = [\n    { id: '0', code: \"int cupsOfWater = 9;\" },\n    { id: '1', code: \"double price = 3.99;\" },\n    { id: '2', code: \"bool monkeyHappy = true;\" },\n    { id: '3', code: \"char grade = 'A';\" },\n    { id: '4', code: \"string address = \\\"123 Sesame Street\\\";\" },\n    { id: '5', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n} \" },\n    { id: '6', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n} else if (bananas > 3) {\\n\\tmonkeyEat = true;\\n} \" },\n    { id: '7', code: \"if (bananas > 5) {\\n\\tmonkeyHappy = true;\\n} else if (bananas > 3) {\\n\\tmonkeyEat = true;\\n} else {\\n\\tmonkeyHappy = false;\\n}\" },\n    { id: '8', code: \"switch (bananas) {\\n\\tcase 0:\\n\\t\\tmonkeyHappy = false;\\n\\t\\tbreak;\\n\\tcase 1:\\n\\t\\tmonkeyHappy = true;\\n\\t\\tbreak;\\n}\" },\n    { id: '9', code: \"while (monkeyHappy) {\\n\\tbananasEaten = bananasEaten + 1;\\n}\" },\n    { id: '10', code: \"for (int monkeys = 10; monkeys > 0; monkeys--) {\\n\\tbananasTaken = bananasTaken + 1;\\n}\" },\n    { id: '11', code: \"cout << \\\"Ooh Ooh Eee Eee Ahh Ahh\\\";\" },\n    { id: '12', code: \"cin >> monkeyCall;\" },\n]\nconst renderItem = (language, id) => {\n    console.log(id);\n    const result = language.find(obj => obj.id === id);\n    console.log(result?.code)\n\n    return result?.code\n}\n\n\n\nconst CodeWindow = (props) => {\n    const languages = [\n        {\n            menuItem: 'Java', render: () => <Tab.Pane style={{ height: 300 }}>\n                {renderItem(java, props.display.toString()).split(\"\\n\").map((i, key) => {\n                    if (i.includes(\"\\t\")) {\n                        return <div key={key}>&emsp;{i}</div>;\n                    }\n                    return <div key={key}>{i}</div>;\n                })}\n            </Tab.Pane>\n        },\n        {\n            menuItem: 'C++', render: () => <Tab.Pane style={{ height: 300 }}>\n                {renderItem(cpp, props.display.toString()).split(\"\\n\").map((i, key) => {\n                    if (i.includes(\"\\t\")) {\n                        return <div key={key}>&emsp;{i}</div>;\n                    }\n                    return <div key={key}>{i}</div>;\n                })}\n            </Tab.Pane>\n        },\n        {\n            menuItem: 'Python', render: () => <Tab.Pane style={{ height: 300 }}>\n                {renderItem(python, props.display.toString()).split(\"\\n\").map((i, key) => {\n                    if (i.includes(\"\\t\")) {\n                        return <div key={key}>&emsp;{i}</div>;\n                    }\n                    return <div key={key}>{i}</div>;\n                })}\n            </Tab.Pane>\n        },\n    ]\n    return (\n        <div>\n            <Tab panes={languages} />\n        </div>\n    )\n}\n\nexport default CodeWindow;","import React from 'react';\nimport { Tab } from 'semantic-ui-react';\n\nconst BlocksMenu = (props) => {\n  const categories = [\n    {\n      menuItem: 'Variables', render: () => <div class=\"five basic ui buttons\">\n        <button class=\"ui button\" value={0} onClick={props.handleClick}>Integer</button>\n        <button class=\"ui button\" value={1} onClick={props.handleClick}>Double</button>\n        <button class=\"ui button\" value={2} onClick={props.handleClick}>Boolean</button>\n        <button class=\"ui button\" value={3} onClick={props.handleClick}>Character</button>\n        <button class=\"ui button\" value={4} onClick={props.handleClick}>String</button>\n      </div>\n    },\n    {\n      menuItem: 'Conditionals', render: () => <div class=\"four basic ui buttons\">\n        <button class=\"ui button\" value={5} onClick={props.handleClick}>if</button>\n        <button class=\"ui button\" value={6} onClick={props.handleClick}>if else</button>\n        <button class=\"ui button\" value={7} onClick={props.handleClick}>else</button>\n        <button class=\"ui button\" value={8} onClick={props.handleClick}>switch</button>\n      </div>\n    },\n    {\n      menuItem: 'Loops', render: () => <div class=\"two basic ui buttons\">\n        <button class=\"ui button\" value={9} onClick={props.handleClick}>while</button>\n        <button class=\"ui button\" value={10} onClick={props.handleClick}>for</button>\n      </div>\n    },\n    {\n      menuItem: 'Actions', render: () => <div class=\"two basic ui buttons\">\n        <button class=\"ui button\" value={11} onClick={props.handleClick}>Print</button>\n        <button class=\"ui button\" value={12} onClick={props.handleClick}>Input</button>\n      </div>\n    },\n  ]\n  return (\n    <Tab panes={categories} />\n  )\n}\n\nexport default BlocksMenu;","import './App.css';\nimport React, { useState } from 'react';\nimport { Container, Divider, Grid, Header, Image, Segment, Button, Input } from 'semantic-ui-react';\n\nimport Workspace from './components/Workspace/Workspace';\nimport CodeWindow from './components/CodeWindow/CodeWindow';\nimport BlocksMenu from './components/BlocksTray/BlocksMenu';\n\nfunction App() {\n  const [element, setElement] = useState('0');\n\n  const onClickHandler = (e) => {\n    setElement(e.target.value);\n  }\n\n  return (\n    <Container style={{ margin: 10 }}>\n      <Grid>\n        <Grid.Column textAlign=\"center\">\n          <Header as='h1' >Monkey Code</Header>\n        </Grid.Column>\n      </Grid>\n      {/* \n      <Grid celled='internally'>\n        <Grid.Row>\n          <Grid.Column width={3}>\n\n            <BlocksTray/>\n            <Workspace attached/>\n            <Button>Compile</Button>\n\n          </Grid.Column>\n\n          <Grid.Column> \n\n            <Segment attached>\n              <CodeWindow/>\n            </Segment>\n            <Button>Download</Button>\n\n          </Grid.Column>\n\n        </Grid.Row>\n      </Grid>\n       */}\n      <Grid columns={2} rows='equal' textAlign='left' >\n        <Grid.Row stretched>\n\n          <Grid.Column stretched>\n\n            <BlocksMenu handleClick={onClickHandler} />\n            <Workspace attached display={element} />\n\n          </Grid.Column>\n\n          <Grid.Column stretched>\n            <CodeWindow display={element} />\n\n          </Grid.Column>\n\n        </Grid.Row>\n        <Grid.Row stretched>\n\n          <Grid.Column stretched>\n            <Button>Compile</Button>\n          </Grid.Column>\n\n          <Grid.Column stretched>\n            <Button>Download</Button>\n          </Grid.Column>\n\n        </Grid.Row>\n      </Grid>\n\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}